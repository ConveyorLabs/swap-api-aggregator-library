export const supportedProtocols = {
  1: {
    UNISWAP_V1: "uniswap-v1",
    UNISWAP_V2: "uniswap-v2",
    SUSHI: "sushi",
    MOONISWAP: "mooniswap",
    BALANCER: "balancer",
    COMPOUND: "compound",
    CURVE: "curve",
    CURVE_V2_SPELL_2_ASSET: "curve-v2-spell-2-asset",
    CURVE_V2_SGT_2_ASSET: "curve-v2-sgt-2-asset",
    CURVE_V2_THRESHOLDNETWORK_2_ASSET: "curve-v2-thresholdnetwork-2-asset",
    CHAI: "chai",
    OASIS: "oasis",
    KYBER: "kyber",
    AAVE: "aave",
    IEARN: "iearn",
    BANCOR: "bancor",
    SWERVE: "swerve",
    BLACKHOLESWAP: "blackholeswap",
    DODO: "dodo",
    DODO_V2: "dodo-v2",
    VALUELIQUID: "valueliquid",
    SHELL: "shell",
    DEFISWAP: "defiswap",
    SAKESWAP: "sakeswap",
    LUASWAP: "luaswap",
    MINISWAP: "miniswap",
    MSTABLE: "mstable",
    SYNTHETIX: "synthetix",
    AAVE_V2: "aave-v2",
    ST_ETH: "st-eth",
    ONE_INCH_LP: "one-inch-lp",
    ONE_INCH_LP_1_1: "one-inch-lp-1-1",
    LINKSWAP: "linkswap",
    S_FINANCE: "s-finance",
    PSM: "psm",
    POWERINDEX: "powerindex",
    XSIGMA: "xsigma",
    SMOOTHY_FINANCE: "smoothy-finance",
    SADDLE: "saddle",
    KYBER_DMM: "kyber-dmm",
    BALANCER_V2: "balancer-v2",
    UNISWAP_V3: "uniswap-v3",
    SETH_WRAPPER: "seth-wrapper",
    CURVE_V2: "curve-v2",
    CURVE_V2_EURS_2_ASSET: "curve-v2-eurs-2-asset",
    CURVE_V2_ETH_CRV: "curve-v2-eth-crv",
    CURVE_V2_ETH_CVX: "curve-v2-eth-cvx",
    CONVERGENCE_X: "convergence-x",
    ONE_INCH_LIMIT_ORDER: "one-inch-limit-order",
    ONE_INCH_LIMIT_ORDER_V2: "one-inch-limit-order-v2",
    ONE_INCH_LIMIT_ORDER_V3: "one-inch-limit-order-v3",
    ONE_INCH_LIMIT_ORDER_V4: "one-inch-limit-order-v4",
    DFX_FINANCE: "dfx-finance",
    FIXED_FEE_SWAP: "fixed-fee-swap",
    DXSWAP: "dxswap",
    SHIBASWAP: "shibaswap",
    UNIFI: "unifi",
    PSM_PAX: "psm-pax",
    WSTETH: "wsteth",
    DEFI_PLAZA: "defi-plaza",
    FIXED_FEE_SWAP_V3: "fixed-fee-swap-v3",
    SYNTHETIX_WRAPPER: "synthetix-wrapper",
    SYNAPSE: "synapse",
    CURVE_V2_YFI_2_ASSET: "curve-v2-yfi-2-asset",
    CURVE_V2_ETH_PAL: "curve-v2-eth-pal",
    POOLTOGETHER: "pooltogether",
    ETH_BANCOR_V3: "eth-bancor-v3",
    ELASTICSWAP: "elasticswap",
    BALANCER_V2_WRAPPER: "balancer-v2-wrapper",
    FRAXSWAP: "fraxswap",
    RADIOSHACK: "radioshack",
    KYBERSWAP_ELASTIC: "kyberswap-elastic",
    CURVE_V2_TWO_CRYPTO: "curve-v2-two-crypto",
    STABLE_PLAZA: "stable-plaza",
    ZEROX_LIMIT_ORDER: "zerox-limit-order",
    CURVE_3CRV: "curve-3crv",
    KYBER_DMM_STATIC: "kyber-dmm-static",
    ANGLE: "angle",
    ROCKET_POOL: "rocket-pool",
    ETHEREUM_ELK: "ethereum-elk",
    ETHEREUM_PANCAKESWAP_V2: "ethereum-pancakeswap-v2",
    SYNTHETIX_ATOMIC_SIP288: "synthetix-atomic-sip288",
    PSM_GUSD: "psm-gusd",
    INTEGRAL: "integral",
    MAINNET_SOLIDLY: "mainnet-solidly",
    NOMISWAP_STABLE: "nomiswap-stable",
    CURVE_V2_TWOCRYPTO_META: "curve-v2-twocrypto-meta",
    MAVERICK_V1: "maverick-v1",
    VERSE: "verse",
    DFX_FINANCE_V3: "dfx-finance-v3",
    ZK_BOB: "zk-bob",
    PANCAKESWAP_V3: "pancakeswap-v3",
    NOMISWAPEPCS: "nomiswapepsc",
    XFAI: "xfai",
    CURVE_V2_LLAMMA: "curve-v2-llamma",
    CURVE_V2_TRICRYPTO_NG: "curve-v2-tricrypto-ng",
    SUSHISWAP_V3: "sushiswap-v3",
    SFRX_ETH: "sfrx-eth",
    SDAI: "sdai",
    ETHEREUM_WOMBATSWAP: "ethereum-wombatswap",
    CARBON: "carbon",
    COMPOUND_V3: "compound-v3",
    DODO_V3: "dodo-v3",
    SMARDEX: "smardex",
    TRADERJOE_V21: "traderjoe-v21",
    PMM15: "pmm15",
    SOLIDLY_V3: "solidly-v3",
    RAFT_PSM: "raft-psm",
    CLAYSTACK: "claystack",
    CURVE_STABLE_NG: "curve-stable-ng",
    LIF3: "lif3",
    BLUEPRINT: "blueprint",
    AAVE_V3: "aave-v3",
    ORIGIN: "origin",
    BGD_AAVE_STATIC: "bgd-aave-static",
  },
  10: {
    OPTIMISM_UNISWAP_V3: "uniswap-v3",
    OPTIMISM_SYNTHETIX: "synthetix",
    OPTIMISM_SYNTHETIX_WRAPPER: "synthetix-wrapper",
    OPTIMISM_CURVE: "curve",
    OPTIMISM_BALANCER_V2: "balancer-v2",
    OPTIMISM_VELODROME: "velodrome",
    OPTIMISM_KYBERSWAP_ELASTIC: "kyberswap-elastic",
    OPTIMISM_CLIPPER_COVES: "clipper-coves",
    OPTIMISM_KYBER_DMM_STATIC: "kyber-dmm-static",
    OPTIMISM_AAVE_V3: "aave-v3",
    OPTIMISM_ELK: "elk",
    OPTIMISM_WOOFI_V2: "woofi-v2",
    OPTIMISM_TRIDENT: "trident",
    OPTIMISM_MUMMY_FINANCE: "mummy-finance",
    OPTIMISM_NOMISWAPEPCS: "nomiswapepsc",
    OPTIMISM_VELODROME_V2: "velodrome-v2",
    OPTIMISM_WOMBATSWAP: "wombatswap",
  },
  42161: {
    ARBITRUM_BALANCER_V2: "balancer-v2",
    ARBITRUM_ONE_INCH_LIMIT_ORDER: "one-inch-limit-order",
    ARBITRUM_ONE_INCH_LIMIT_ORDER_V2: "one-inch-limit-order-v2",
    ARBITRUM_ONE_INCH_LIMIT_ORDER_V3: "one-inch-limit-order-v3",
    ARBITRUM_ONE_INCH_LIMIT_ORDER_V4: "one-inch-limit-order-v4",
    ARBITRUM_DODO: "dodo",
    ARBITRUM_DODO_V2: "dodo-v2",
    ARBITRUM_SUSHISWAP: "sushiswap",
    ARBITRUM_DXSWAP: "dxswap",
    ARBITRUM_UNISWAP_V3: "uniswap-v3",
    ARBITRUM_CURVE: "curve",
    ARBITRUM_CURVE_V2: "curve-v2",
    ARBITRUM_GMX: "gmx",
    ARBITRUM_SYNAPSE: "synapse",
    ARBITRUM_SADDLE: "saddle",
    ARBITRUM_KYBERSWAP_ELASTIC: "kyberswap-elastic",
    ARBITRUM_KYBER_DMM_STATIC: "kyber-dmm-static",
    ARBITRUM_AAVE_V3: "aave-v3",
    ARBITRUM_ELK: "elk",
    ARBITRUM_WOOFI_V2: "woofi-v2",
    ARBITRUM_CAMELOT: "camelot",
    ARBITRUM_TRADERJOE: "traderjoe",
    ARBITRUM_TRADERJOE_V2: "traderjoe-v2",
    ARBITRUM_SWAPFISH: "swapfish",
    ARBITRUM_ZYBER: "zyber",
    ARBITRUM_ZYBER_STABLE: "zyber-stable",
    ARBITRUM_SOLIDLIZARD: "solidlizard",
    ARBITRUM_ZYBER_V3: "zyber-v3",
    ARBITRUM_MYCELIUM: "mycelium",
    ARBITRUM_TRIDENT: "trident",
    ARBITRUM_SHELL_OCEAN: "shell-ocean",
    ARBITRUM_RAMSES: "ramses",
    ARBITRUM_TRADERJOE_V2_1: "traderjoe-v2-1",
    ARBITRUM_NOMISWAPEPCS: "nomiswapepsc",
    ARBITRUM_CAMELOT_V3: "camelot-v3",
    ARBITRUM_WOMBATSWAP: "wombatswap",
    ARBITRUM_CHRONOS: "chronos",
    ARBITRUM_LIGHTER: "lighter",
    ARBITRUM_ARBIDEX: "arbidex",
    ARBITRUM_ARBIDEX_V3: "arbidex-v3",
    ARBSWAP: "arbswap",
    ARBSWAP_STABLE: "arbswap-stable",
    ARBITRUM_SUSHISWAP_V3: "sushiswap-v3",
    ARBITRUM_RAMSES_V2: "ramses-v2",
    ARBITRUM_LEVEL_FINANCE: "level-finance",
    ARBITRUM_CHRONOS_V3: "chronos-v3",
    ARBITRUM_PANCAKESWAP_V3: "pancakeswap-v3",
    ARBITRUM_PMM11: "pmm11",
    ARBITRUM_DODO_V3: "dodo-v3",
    ARBITRUM_SMARDEX: "smardex",
    ARBITRUM_INTEGRAL: "integral",
    ARBITRUM_DFX_FINANCE_V3: "dfx-finance-v3",
    ARBITRUM_CURVE_STABLE_NG: "curve-stable-ng",
  },
  8453: {
    BASE_MAVERICK: "maverick",
    BASE_ONE_INCH_LIMIT_ORDER_V3: "one-inch-limit-order-v3",
    BASE_ONE_INCH_LIMIT_ORDER_V4: "one-inch-limit-order-v4",
    BASE_UNISWAP_V3: "uniswap-v3",
    BASE_BALANCER_V2: "balancer-v2",
    BASE_SUSHI_V3: "sushi-v3",
    BASE_SWAP: "base-swap",
    BASE_KOKONUT_SWAP: "kokonut-swap",
    BASE_ROCKET_SWAP: "rocket-swap",
    BASE_SWAP_BASED: "swap-based",
    BASE_SYNTHSWAP: "synthswap",
    BASE_HORIZON_DEX: "horizon-dex",
    BASE_VELOCIMETER_V2: "velocimeter-v2",
    BASE_DACKIE_SWAP: "dackie-swap",
    BASE_ALIEN_BASE: "alien-base",
    BASE_WOOFI_V2: "woofi-v2",
    BASE_ZYBER_V3: "zyber-v3",
    BASE_PANCAKESWAP_V2: "pancakeswap-v2",
    BASE_PANCAKESWAP_V3: "pancakeswap-v3",
    BASE_AERODROME: "aerodrome",
    BASE_BASESWAP_V3: "baseswap-v3",
    BASE_CURVE: "curve",
    BASE_CURVE_V2_TRICRYPTO_NG: "curve-v2-tricrypto-ng",
    BASE_CURVE_V2_TWO_CRYPTO: "curve-v2-two-crypto",
    BASE_SMARDEX: "smardex",
    BASE_UNISWAP_V2: "uniswap-v2",
    BASE_SUSHI_V2: "sushi-v2",
  },
  56: {
    PANCAKESWAP: "pancakeswap",
    VENUS: "venus",
    JULSWAP: "julswap",
    BAKERYSWAP: "bakeryswap",
    BSC_ONE_INCH_LP: "one-inch-lp",
    ACRYPTOS: "acryptos",
    BSC_DODO: "dodo",
    APESWAP: "apeswap",
    SPARTAN_V2: "spartan-v2",
    VSWAP: "vswap",
    VPEGSWAP: "vpegswap",
    HYPERSWAP: "hyperswap",
    BSC_DODO_V2: "dodo-v2",
    SWAPSWIPE: "swapswipe",
    ELLIPSIS_FINANCE: "ellipsis-finance",
    BSC_NERVE: "nerve",
    BSC_SMOOTHY_FINANCE: "smoothy-finance",
    CHEESESWAP: "cheeseswap",
    PANCAKESWAP_V2: "pancakeswap-v2",
    MDEX: "mdex",
    WARDEN: "warden",
    WAULTSWAP: "waultswap",
    BSC_ONE_INCH_LIMIT_ORDER: "one-inch-limit-order",
    BSC_ONE_INCH_LIMIT_ORDER_V2: "one-inch-limit-order-v2",
    BSC_ONE_INCH_LIMIT_ORDER_V3: "one-inch-limit-order-v3",
    BSC_ONE_INCH_LIMIT_ORDER_V4: "one-inch-limit-order-v4",
    ACSI_FINANCE: "acsi-finance",
    GAMBIT_FINANCE: "gambit-finance",
    JETSWAP: "jetswap",
    BSC_UNIFI: "unifi",
    BSC_KYBER_DMM: "kyber-dmm",
    BSC_BI_SWAP: "biswap",
    BSC_DOPPLE: "dopple",
    BABYSWAP: "babyswap",
    WOOFI: "woofi",
    BSC_ELK: "elk",
    BSC_SYNAPSE: "synapse",
    BSC_AUTOSHARK: "autoshark",
    BSC_CAFE_SWAP: "cafe-swap",
    PLANET_FINANCE: "planet-finance",
    BSC_ANNEX_FINANCE: "annex-finance",
    BSC_ANNEX_SWAP: "annex-swap",
    BSC_RADIOSHACK: "radioshack",
    BSC_KYBERSWAP_ELASTIC: "kyberswap-elastic",
    BSC_FSTSWAP: "fstswap",
    BSC_NOMISWAP: "nomiswap",
    BSC_CONE: "cone",
    BSC_KYBER_DMM_STATIC: "kyber-dmm-static",
    WOMBATSWAP: "wombatswap",
    BSC_NOMISWAP_STABLE: "nomiswap-stable",
    BSC_PANCAKESWAP_STABLE: "pancakeswap-stable",
    BSC_BABYDOGE: "babydoge",
    BSC_THENA: "thena",
    BSC_WOOFI_V2: "woofi-v2",
    BSC_KYOTOSWAP: "kyotoswap",
    BSC_TRADERJOE: "traderjoe",
    BSC_TRADERJOE_V2: "traderjoe-v2",
    BSC_UNISWAP_V3: "uniswap-v3",
    BSC_TRIDENT: "trident",
    BSC_MAVERICK_V1: "maverick-v1",
    BSC_PANCAKESWAP_V3: "pancakeswap-v3",
    BSC_THENA_V3: "thena-v3",
    BSC_TRADERJOE_V2_1: "traderjoe-v2-1",
    BSC_NOMISWAPEPCS: "nomiswapepsc",
    BSC_USDFI: "usdfi",
    BSC_PMM11: "pmm11",
    BSC_LEVEL_FINANCE: "level-finance",
    BSC_DODO_V3: "dodo-v3",
    BSC_SMARDEX: "smardex",
  },
  137: {
    POLYGON_QUICKSWAP: "quickswap",
    POLYGON_CURVE: "curve",
    POLYGON_SUSHISWAP: "sushiswap",
    POLYGON_AAVE_V2: "aave-v2",
    COMETH: "cometh",
    DFYN: "dfyn",
    POLYGON_MSTABLE: "mstable",
    FIREBIRD_FINANCE: "firebird-finance",
    ONESWAP: "oneswap",
    POLYGON_ONE_INCH_LIMIT_ORDER: "one-inch-limit-order",
    POLYGON_ONE_INCH_LIMIT_ORDER_V2: "one-inch-limit-order-v2",
    POLYGON_ONE_INCH_LIMIT_ORDER_V3: "one-inch-limit-order-v3",
    POLYGON_ONE_INCH_LIMIT_ORDER_V4: "one-inch-limit-order-v4",
    POLYGON_WAULTSWAP: "waultswap",
    POLYGON_BALANCER_V2: "balancer-v2",
    POLYGON_KYBER_DMM: "kyber-dmm",
    POLYGON_DODO: "dodo",
    POLYGON_DODO_V2: "dodo-v2",
    POLYGON_JETSWAP: "jetswap",
    IRONSWAP: "ironswap",
    POLYGON_UNIFI: "unifi",
    POLYGON_DFX_FINANCE: "dfx-finance",
    POLYGON_APESWAP: "apeswap",
    POLYGON_SAFE_SWAP: "safe-swap",
    POLYCAT_FINANCE: "polycat-finance",
    POLYGON_CURVE_V2: "curve-v2",
    POLYGON_UNISWAP_V3: "uniswap-v3",
    POLYGON_ELK: "elk",
    POLYGON_SYNAPSE: "synapse",
    POLYGON_GRAVITY: "gravity",
    POLYGON_NERVE: "nerve",
    POLYGON_DYSTOPIA: "dystopia",
    POLYGON_RADIOSHACK: "radioshack",
    POLYGON_MESHSWAP: "meshswap",
    POLYGON_KYBERSWAP_ELASTIC: "kyberswap-elastic",
    POLYGON_WOOFI: "woofi",
    POLYGON_MAVERICK: "maverick",
    POLYGON_CLIPPER_COVES: "clipper-coves",
    POLYGON_SWAAP: "swaap",
    MM_FINANCE: "mm-finance",
    POLYGON_KYBER_DMM_STATIC: "kyber-dmm-static",
    POLYGON_AAVE_V3: "aave-v3",
    POLYGON_QUICKSWAP_V3: "quickswap-v3",
    POLYGON_ZK_BOB: "zk-bob",
    POLYGON_TRIDENT: "trident",
    POLYGON_WOOFI_V2: "woofi-v2",
    POLYGON_DFX_FINANCE_V3: "dfx-finance-v3",
    POLYGON_SATIN: "satin",
    POLYGON_SATIN_4POOL: "satin-4pool",
    POLYGON_METAVAULT_TRADE: "metavault-trade",
    POLYGON_NOMISWAPEPCS: "nomiswapepsc",
    POLYGON_PEARL: "pearl",
    POLYGON_SUSHISWAP_V3: "sushiswap-v3",
    POLYGON_RETRO: "retro",
    POLYGON_PMM11: "pmm11",
    POLYGON_DODO_V3: "dodo-v3",
    POLYGON_SMARDEX: "smardex",
  },
};

export function constructQuery(chainId, includeProtocols, excludeProtocols) {
  const allDEXS = supportedProtocols[chainId];
  let includeDEXS = [];
  let excludeDEXS = [];

  if (includeProtocols) {
    const included = includeProtocols
      .split(",")
      .map((protocol) => protocol.trim());
    includeDEXS = Object.keys(allDEXS).filter((key) =>
      included.includes(allDEXS[key])
    );
    excludeDEXS = Object.keys(allDEXS).filter(
      (key) => !includeDEXS.includes(key)
    );
  } else if (excludeProtocols) {
    const excluded = excludeProtocols
      .split(",")
      .map((protocol) => protocol.trim());
    excludeDEXS = Object.keys(allDEXS).filter((key) =>
      excluded.includes(allDEXS[key])
    );
    includeDEXS = Object.keys(allDEXS).filter(
      (key) => !excludeDEXS.includes(key)
    );
  } else {
    includeDEXS = Object.keys(allDEXS);
  }

  return {
    includeDEXS: includeDEXS.join(","),
    excludeDEXS: excludeDEXS.join(","),
  };
}
